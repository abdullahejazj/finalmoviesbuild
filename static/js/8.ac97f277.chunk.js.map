{"version":3,"sources":["components/cast/CastItem.jsx","components/cast/index.jsx","pages/movie-details/Iframe.jsx","pages/movie-details/index.jsx"],"names":["CastItem","cast","background","imageApi","w500Image","profile_path","className","src","alt","name","character","Cast","useState","setCast","useParams","category","id","settings","infinite","autoplay","slidesToShow","slidesToScroll","centerPadding","swipeToSlide","pauseOnHover","nextArrow","prevArrow","responsive","breakpoint","useEffect","fetchCast","a","params","tmdbApi","credits","castTemp","filter","item","toLowerCase","includes","length","map","i","Iframe","type","width","key","title","frameBorder","allow","allowFullScreen","style","height","MovieDetails","movieDetails","setMovieDetails","videos","setVideos","preloader","setPreloader","setTitle","fetchDetails","detail","response","getVideos","responseVideos","results"],"mappings":"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","file":"static/js/8.ac97f277.chunk.js","sourcesContent":["import React from 'react';\nimport { imageApi } from '../../api';\n\n// ----------------------------------------------------------------------\n\nexport default function CastItem({ cast }) {\n  const background = imageApi.w500Image(cast.profile_path);\n  return (\n    <div className=\"relative movie__item h-44 bg-cover bg-center bg-no-repeat group duration-200 my-3 mx-3 shadow-lg hover:shadow-lg border-l-0 hover:border-l-4 border-red-600 overflow-hidden rounded-md\">\n      <div className=\"absolute flex top-0 left-0 w-full h-full\">\n        <img src={background} className=\"w-2/5 h-full object-cover\" alt=\"\" />\n        <div className=\"text-gray-300 h-full p-5\">\n          <div className=\"line-6\">\n            <h3 className=\"text-lg\">{cast.name}</h3>\n            <h4 className=\"text-red-600 font-semibold\">{cast.character}</h4>\n          </div>\n        </div>\n      </div>\n      <div className=\"absolute top-0 left-0 w-full h-full overlay overlay-2\" />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Slider from 'react-slick';\nimport CastItem from './CastItem';\nimport { PrevArrow } from '../../modules/movies';\nimport { NextArrow } from '../../modules/movies';\n// api\nimport { tmdbApi } from '../../api';\n\n// ----------------------------------------------------------------------\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { category, id } = useParams();\n  const settings = {\n    infinite: true,\n    autoplay: true,\n    slidesToShow: 5,\n    slidesToScroll: 5,\n    centerPadding: 0,\n    swipeToSlide: true,\n    pauseOnHover: true,\n    nextArrow: <NextArrow />,\n    prevArrow: <PrevArrow />,\n    responsive: [\n      {\n        breakpoint: 1700,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 4,\n        },\n      },\n      {\n        breakpoint: 1280,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        },\n      },\n      {\n        breakpoint: 813,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const params = {};\n        const { cast } = await tmdbApi.credits(category, id, { params });\n        const castTemp = cast.filter((item) => {\n          if (item.profile_path && !item.character.toLowerCase().includes('uncredited'))\n            return item;\n          // eslint-disable-next-line array-callback-return\n          return;\n        });\n        setCast(castTemp);\n      } catch (error) {}\n    };\n\n    fetchCast();\n  }, [category, id]);\n\n  return (\n    <>\n      {cast && cast.length > 0 && (\n        <div className=\"w-11/12 mx-auto\">\n          <div className=\"block -mx-3\">\n            <h2 className=\"capitalize px-3 text-gray-300 mt-812:text-3xl text-2xl font-semibold tracking-wide\">\n              {`Cast (${cast.length})`}\n            </h2>\n            {cast && cast.length > 4 ? (\n              <div className=\"relative group\">\n                <Slider {...settings}>\n                  {cast && cast.map((item, i) => <CastItem key={i} cast={item} />)}\n                </Slider>\n              </div>\n            ) : (\n              <div\n                id=\"movie__grid\"\n                className=\"grid grid-cols-1 mt-568:grid-cols-2 mt-812:grid-cols-3 mt-1280:grid-cols-4 mt-1700:grid-cols-5 gap-0 min-h-full\"\n              >\n                {cast && cast.map((item, i) => <CastItem key={i} cast={item} />)}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","export default function Iframe({ item }) {\n  return (\n    <div className=\"max-w-screen-2xl mx-auto w-11/12 space-y-3\">\n      <h3 className=\"mt-812:text-3xl text-2xl font-medium tracking-wide text-gray-300\">\n        {item.type}\n      </h3>\n      <div className=\"overflow-hidden\">\n        <iframe\n          width=\"100%\"\n          src={`https://www.youtube.com/embed/${item.key}`}\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n          className=\"rounded-md\"\n          style={{ height: `calc(50/100 * 100vw)` }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Page from '../../components/page';\nimport Cast from '../../components/cast';\nimport { MovieList } from '../../modules/movies';\nimport Preloader from '../../components/preloader';\nimport { BannerMovieDetails } from '../../components/banner';\nimport Iframe from './Iframe';\nimport { tmdbApi } from '../../api';\n\n// ----------------------------------------------------------------------\n\nexport default function MovieDetails() {\n  const { category, id } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [videos, setVideos] = useState([]);\n  const [preloader, setPreloader] = useState(true);\n  const [title, setTitle] = useState('');\n\n  const fetchDetails = async () => {\n    try {\n      const params = {};\n      const response = await tmdbApi.detail(category, id, { params });\n      setMovieDetails(response);\n\n      const responseVideos = await tmdbApi.getVideos(category, id);\n      setVideos(responseVideos.results);\n\n      const title = response.title ? response.title : response.name;\n      setTitle(title);\n      setPreloader(false);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  if (preloader) return <Preloader />;\n\n  return (\n    <Page title={title}>\n      <BannerMovieDetails movieDetails={movieDetails} />\n      <div className=\"space-y-10 mb-10\">\n        {videos && videos.map((item) => <Iframe key={item.id} item={item} />)}\n      </div>\n      <Cast />\n      <div className=\"w-11/12 mx-auto\">\n        <div className=\"-mx-3\">\n          <MovieList category={category} type=\"similar\" title=\"Similar\" id={id} />\n        </div>\n      </div>\n    </Page>\n  );\n};\n"],"sourceRoot":""}